COMP8 INSTRUCTION SET


INSTRUCTION            DESCRIPTION
--------------------------------------------------------------------------------------
HLT                    halt
OUT                    write to output buffer
ADD                    add A and B and store the result to A: A = A + B    
SUB                    subtract B from A and store the result to A: A = A - B    
LD   <reg>             load memory DATA at current memory address to register <A|B>
ST   <reg>             store register DATA to memory at current memory address <A|B>
ADR  <reg>             set the memory ADDRESS to value stored at register <A|B>
LDI  <reg> <imm>       load 4bit immediate to register <A|B> less significant bits
LDIH <reg> <imm>       load 4bit immediate to register <A|B> highest significant bits
ADRI <imm>             set immediate to memory ADDRESS
BEQ  <imm>             if A = B PC is set to immediate value, else continue.
JMP  <imm>             set PC to immediate value.

-----------------------------------------------------------
| TYPE | CODE |                  LAYOUT                   |
|------|------|-------------------------------------------|
|  O   |  0   | 0-2 -| 3 code | 4 type | 5-6 code | 7 reg |
|  I   |  1   |    0-3 imm    | 4 type | 5-6 code | 7 op  |
-----------------------------------------------------------

---------------------------------------------------
| TYPE |  NAME  |  BITCONFIG   | CONTROLER OUTPUT |
|------|--------|-012-3-4-56-7-|------------------|
|  O   | HLT    | --- 0 0 00 0 | 00 00 000 00 000 |  halts (dont actually halt, but nothing is done)
|  O   | OUT    | --- 0 0 00 1 | 00 00 000 00 001 |  write to output buffer
|  O   | ADD    | --- 0 0 10 0 | 00 10 000 10 000 |  A = A + B    
|  O   | SUB    | --- 0 0 10 1 | 00 10 000 10 100 |  A = A - B
|  M   | LD A   | --- 1 0 00 0 | 00 01 100 00 000 |  load memory DATA at current address to A
|  M   | LD B   | --- 1 0 00 1 | 00 00 100 01 000 |  load memory DATA at current address to B
|  M   | ST A   | --- 1 0 10 0 | 00 10 010 00 000 |  store A DATA to memory at current address
|  M   | ST B   | --- 1 0 10 1 | 00 00 010 10 000 |  store B DATA to memory at current address
|  M   | ADR A  | --- 1 0 01 0 | 00 10 001 00 000 |  set the memory ADDRESS to A
|  M   | ADR B  | --- 1 0 01 1 | 00 00 001 10 000 |  set the memory ADDRESS to B
|  I   | LDI  A | <imm> 1 10 0 | 01 01 000 00 000 |  load immediate to A (lower significant bits)
|  I   | LDI  B | <imm> 1 10 1 | 01 00 000 01 000 |  load immediate to B (lower significant bits)
|  I   | LDHI A | <imm> 1 01 0 | 11 01 000 00 000 |  load immediate to A (higher significant bits)
|  I   | LDHI B | <imm> 1 01 1 | 11 00 000 01 000 |  load immediate to B (higher significant bits)
|  I   | ADRI   | <imm> 1 00 0 | 01 00 001 00 000 |  set immediate to memory ADDRESS
|  I   | BEQ    | <imm> 1 11 0 | 01 00 000 00 1?0 |  if A = B PC is set to immediate value, else continue.
|  I   | JMP    | <imm> 1 11 1 | 01 00 000 00 010 |  set PC to immediate value.
---------------------------------------------------

CONTROLER OUTPUT IN ORDER
IMM2BUS
IMM2BUS_H
A_READ 
A_WRITE
M_READ
M_WRITE
MR_WRITE
B_READ (NAO VAI PARA A BUS)
B_WRITE
ALU_OP
PC_WRITE
OUT_WRITE
